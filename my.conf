include  required(classpath("application"))

backend {
  default = "PBSPRO"
  providers {
    PBSPRO {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        
        runtime-attributes = """
        String? docker
        String  walltime = "240:00:00"
        String  queue = "cgsd"
        Int     cpu = 3
        Int     memory_gb = 6
        """
        
        submit = """
        qsub \
        -k oe \
        -l walltime=${walltime} \
        -q ${queue} \
        -l ncpus=${cpu} \
        -l mem=${memory_gb}gb \
        -o ${out} \
        -e ${err} \
        ${script}
        """
        
        submit-docker = """
        #make sure Singularity is loaded
        module load singularity

        # if you prefer to have singularity cache in $HOME, delete the following two lines
        mkdir -p /groups/cgsd/$USER/.singularity/cache
        export SINGULARITY_CACHEDIR=/groups/cgsd/$USER/.singularity/cache

        # Singularity cachedir check if it exists, if not create one        
        if [ -z $SINGULARITY_CACHEDIR ];
          then CACHE_DIR=$HOME/.singularity/cache
          else CACHE_DIR=$SINGULARITY_CACHEDIR
        fi

        # make sure cache dir exists, so we can create a lock file with flock command
        mkdir -p $CACHE_DIR
        LOCK_FILE=$CACHE_DIR/singularity_pull_flock
        
        # Create an exclusive filelock with flock. --verbose is useful for 
        # for debugging, as is the echo command. These show up in `stdout.submit`
        flock --exclusive --timeout 900 $LOCK_FILE \
        singularity exec  -C docker://${docker} \
        echo "successfully pulled ${docker}!"

        # Submit the script 
        qsub \
        -W block=true \
        -k oed \
        -v SINGULARITY_CACHEDIR \
        -N ${job_name} \
        -l walltime=${walltime} \
        -q ${queue} \
        -l ncpus=${cpu} \
        -l mem=${memory_gb}gb \
        -o ${cwd}/execution/stdout \
        -e ${cwd}/execution/stderr \
        -- /software/singularity/3.6.3/bin/singularity exec -C --bind ${cwd}:${docker_cwd} docker://${docker} ${job_shell} ${docker_script}
        """
        
        root = "/groups/cgsd/alexandre/cromwell-executions"
        job-id-regex = "(\\d+)"
        kill = "qdel ${job_id}"
        check-alive = "qstat ${job_id}"
      }
    }
  }
}
